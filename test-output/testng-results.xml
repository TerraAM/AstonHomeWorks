<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-20T19:18:43 UZT" name="Default suite" finished-at="2024-10-20T19:18:43 UZT" duration-ms="57">
    <groups>
    </groups>
    <test started-at="2024-10-20T19:18:43 UZT" name="Default test" finished-at="2024-10-20T19:18:43 UZT" duration-ms="57">
      <class name="test.java.lesson14_testng.FactorialTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.java.lesson14_testng.FactorialTest@1725dc0f]" started-at="2024-10-20T19:18:43 UZT" name="setUp" finished-at="2024-10-20T19:18:43 UZT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFactorial(int,int)[pri:0, instance:test.java.lesson14_testng.FactorialTest@1725dc0f]" started-at="2024-10-20T19:18:43 UZT" name="testFactorial" data-provider="factorialData" finished-at="2024-10-20T19:18:43 UZT" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFactorial -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.java.lesson14_testng.FactorialTest@1725dc0f]" started-at="2024-10-20T19:18:43 UZT" name="setUp" finished-at="2024-10-20T19:18:43 UZT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFactorial(int,int)[pri:0, instance:test.java.lesson14_testng.FactorialTest@1725dc0f]" started-at="2024-10-20T19:18:43 UZT" name="testFactorial" data-provider="factorialData" finished-at="2024-10-20T19:18:43 UZT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFactorial -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.java.lesson14_testng.FactorialTest@1725dc0f]" started-at="2024-10-20T19:18:43 UZT" name="setUp" finished-at="2024-10-20T19:18:43 UZT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFactorial(int,int)[pri:0, instance:test.java.lesson14_testng.FactorialTest@1725dc0f]" started-at="2024-10-20T19:18:43 UZT" name="testFactorial" data-provider="factorialData" finished-at="2024-10-20T19:18:43 UZT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[120]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFactorial -->
        <test-method signature="testFactorial(int,int)[pri:0, instance:test.java.lesson14_testng.FactorialTest@1725dc0f]" started-at="2024-10-20T19:18:43 UZT" name="testFactorial" data-provider="factorialData" finished-at="2024-10-20T19:18:43 UZT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3628800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFactorial -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.java.lesson14_testng.FactorialTest@1725dc0f]" started-at="2024-10-20T19:18:43 UZT" name="setUp" finished-at="2024-10-20T19:18:43 UZT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.java.lesson14_testng.FactorialTest@1725dc0f]" started-at="2024-10-20T19:18:43 UZT" name="setUp" finished-at="2024-10-20T19:18:43 UZT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFactorialThrowsExceptionForNegativeNumber()[pri:0, instance:test.java.lesson14_testng.FactorialTest@1725dc0f]" started-at="2024-10-20T19:18:43 UZT" name="testFactorialThrowsExceptionForNegativeNumber" finished-at="2024-10-20T19:18:43 UZT" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at main.java.lesson14_testng.custom.Factorial.calculate(Factorial.java:8)
at test.java.lesson14_testng.FactorialTest.testFactorialThrowsExceptionForNegativeNumber(FactorialTest.java:46)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFactorialThrowsExceptionForNegativeNumber -->
      </class> <!-- test.java.lesson14_testng.FactorialTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
